# Измените код предыдущей программы, чтобы она вычисляла наибольшее число с помощью одного выражения.
# a = int(input())
# b = int(input())
# c= a if a > b else b
# print(c)
from enum import unique
from os import remove

# sum1 = int(input())
# disc1 = 0,95
# disc2 = 0.88
# disc3 = 0.80
# disc4 = 0.70
# if sum1 in range(5000):
#     disc_sum = sum1*0.95
#     disc_d = sum1 - disc_sum
#     print('Размер скидки: ', disc_d)
#     print('Сумма с учетом скидки: ', disc_sum)
# if sum1 in range(5000, 15000):
#     disc_sum = sum1*0.95
#     disc_d = sum1 - disc_sum
#     print('Размер скидки: ', disc_d)
#     print('Сумма с учетом скидки: ', disc_sum)
#
# a = int(input())
# b = int(input())
#
# # for i in (a,b):
# #     i=a+b
# print(a+b)

# Не решено
# str1=[5, 2, 5, 5, 2, 1]
# s2=[]
# for s in str1:
#     if s==s:
#         s2=str1.count(s)
# print(s2)

# import Pandas

# -------//--------

#https://code.mu/ru/python/tasker/stager/1/1/
#проверка числа (положительное или отрицательное)
# l = -25
# print(f"{'число отрицательное' if l<0 else 'чмсло положительное'}")

#Дана строка. Выведите в консоль последний символ строки.
# l = 'строка'
# print(l[5::])

#Дано число. Проверьте, четное оно или нет.
# l=6
# print(l%2==0)


#Даны два слова. Проверьте, что первые буквы этих слов совпадают.
# w_1= 'слово1'
# w_2= 'слово2'
# print(w_1[:1:] == w_2[:1:])


#Дано слово. Получите его последнюю букву. Если слово заканчивается на мягкий знак, то получите предпоследнюю букву.
# w_1= 'словарь'
# print(f"{w_1[6::] if w_1[6::]!='ь' else w_1[5::2]}")


#Дано число. Выведите в консоль первую цифру этого числа.
# l = 25
# print(l//10)

#Дано число. Выведите в консоль сумму первой и последней цифры этого числа.
# l = 25
# print(l//10 + l%10)

# вариант с неизвестным числом
# l = int(input())
# l1= l%10
# while l//10 !=0:
#     l = l//10
# print(l+l1)

#Дано число. Выведите количество цифр в этом числе.
# l = 25
# print(len(str(l)))

# то же самое но БЕЗ преобразования в строку.
# l = 2589
# cnt=0
# while l >0:
#     l=l//10
#     cnt=cnt+1
# print(cnt)

#Даны два числа. Проверьте, что первые цифры этих чисел совпадают.
# l = 25
# l2 = 25
# print(l//10 == l2//10)


#Дана строка. Если в этой строке более одного символа, выведите в консоль предпоследний символ этой строки.
# l = input()
# if len(l) >1:
#     i = len(l)-1
#     print(l[-2])
# else:
#     print('недостаточно символов')

# Даны два целых числа. Проверьте, что первое число без остатка делится на второе.
# l=25
# l2=25
# print(l % l2 == 0)


# Дана строка. Получите список ее символов:
# l = 'строка'
# print(list(l))

# Дан словарь с датой:
# Из элементов этого словаря соберите дату в следующем формате:
# '2025-12-31'
# d = {
# 	'year' : '2025',
# 	'month': '12',
# 	'day'  : '31',
# }
# print('-'.join(d.values()))

#Выведите в консоль все целые числа от 1 до 100.
# l=int()
# while l<100:
# 	l+=1
# print(l)

#Выведите в консоль все целые числа от 100 до 1.
# l=int()
# for i in range(100, 0, -1):
# 	print(i)

#Выведите в консоль все четные числа из промежутка от 1 до 100
# l=int()
# for i in range(1, 100):
# 	if i %2==0:
# 		print(i)

#Получите из него два последних элемента:
# l=[1, 2, 3, 4, 5, 6]
# print(l[-2::])

# Уровень 1.5 задачника Python
# №1  Найдите сумму всех целых чисел от 1 до 100.
# l = int(input())
# print(l*(l+1)/2)

# Найдите сумму всех целых четных чисел в промежутке от 1 до 100.
# l=0
# for i in range(1, 100):
#     if i %2==0:
#         l+=i
# print(l)

# другой способ нахождения четных и нечетных чисел
#print(sum(range(2, 101, 2)))



#Даны два целых числа. Найдите остаток от деления первого числа на второе.
# a=18
# b=3
# print(a%b)

# l=[1, 2, 3, 4, 5, 6]
# print(l[::2])

#Уровень 1.6 задачника Python Дан список с числами:[1, 2, 3, 4, 5]  Найдите сумму элементов этого списка.
# s=[1, 2, 3, 4, 5]
# print(sum(s))

#Найдите сумму квадратов элементов этого списка.
# s=[1, 2, 3, 4, 5]
# s1=map(lambda i: i**2, s) # map берет по одному элементу из списка и выполняет условие, lambda сокращает написание условия. Без lambda пришлось бы писать код через функцию def
# print(sum(s1))

#Найдите сумму квадратных корней элементов этого списка.
# s=[1, 2, 3, 4, 5]
# s1=map(lambda i: i*0.5, s) # map берет по одному элементу из списка и выполняет условие
# print(sum(s1))

# более короткий вариант!!!  print(sum(n*0.5 for n in s))


# Найдите сумму положительных элементов этого списка.
# l=[1, 2, -3, 4, -5]
# s=0
# for i in l:
#     i=int(i)
#     if i>0:
#         s+=i
# print(s)

# Переберите и выведите в консоль по очереди все символы с конца строки.
# l = 'abcde'
# l=str(l)
# for i in l[::-1]:
#     print(i)

#  Найдите сумму элементов этого словаря.
# l = {
# 	'a': 1,
# 	'b': 2,
# 	'c': 3,
# 	'd': 4,
# }
# l1=l.values()
# print(sum(l1))

# Найдите сумму квадратов элементов этого словаря.
# l = {
# 	'a': 1,
# 	'b': 2,
# 	'c': 3,
# 	'd': 4,
# }
# l2=list(l.values()) # преобразуем в список чтобы воспользоваться функцией lambda
# sm=map(lambda x: x**2, l2)
# print(sum(sm))


# Найдите сумму цифр этого числа.
# l = 12345
# l2=list(l)
# s=0
# for i in l2:
#     s+=int(i)
# print(s)

# вариант с map
# s=map(int, str(l))
# print(sum(s))

# Увеличьте каждое число из списка на 10 процентов.
# l = [1, 2, 3, 4, 5]
# s=0
# for i in l:
#     s+=float(i*1.1)
#     print(s)

# Увеличьте каждое число из словаря в 2 раза:
# l={
# 	'a': 1,
# 	'b': 2,
# 	'c': 3,
# 	'd': 4,
# }
# l['a']='2'
# print(l)

# Дан список со строками. Оставьте в этом списке только те строки, которые начинаются на http://.
# item = []
# spisok = [
#     "https://chat-gpt.org",
#     "https://yandex.ru",
#     "http://www.youtube.com",
#     "http://fg.resh.edu.ru/",
# ]
# for i in range(len(spisok)):
#     if spisok[i].startswith("http://"):
#         item.append(spisok[i])
# print(spisok)
# print(item)

# Дана некоторая строка. Найдите позицию первого нуля в строке.
# l='12500250'
# l2=l.find('0')
# print(l2)

#  Дан список. Удалите из него элементы с заданным значением
# l=['a', 5, 'f']
# l.remove(5)
# l.remove('f')
# print(l)

# Выведите в консоль все числа в промежутке от 10 до 1000, сумма первой и второй цифры которых равна пяти.
# l=1000
# for i in range(10, 1000):
#     if (i//10)+(i%10)==5:
#         print(i)

# Очистите строку от дублей символов:
# l='abcdeabc'
# l2=set(l)
# print(str(sorted(l2)))

# Дан список с числами. Подсчитайте количество отрицательных чисел в этом списке.
# l=[2, 3, -5, -9, -3]
# s = sum(1 for x in l if x < 0)
# print(s)

# Дан список с числами. Оставьте в нем только положительные числа.
# l=[2, 3, -5, -3, -9, -10]
# s=[]
# for i in l:
#     if i>0:
#         s.append(i)
# print(s)

# Дана строка. Удалите предпоследний символ из этой строки.
# s = input()
# s2=list(s)
# for i in s2:
#     if i == s2[-2]:
#         s2.remove(i)
# print(str(s2))

# Дан список со строками. Оставьте в этом списке только те строки, которые заканчиваются на .html.
# spisok = [
#     "sps.html",
#     "https://yandex.ru",
#     "http://www.youtube.html",
#     "http://fg.resh.edu.ru/",
# ]
# s = []
# for i in spisok:
#     if i.endswith('.html'):
#         s.append(i)
# print(s)

# Даны два слова. Проверьте, что последняя буква первого слова совпадает с первой буквой второго слова.
# l = input()
# l2 = input()
# print(l[-1::]==l2[:1:])

# Дана некоторая строка. Найдите позицию третьего нуля в строке.
# def position_3_zero(str):
#     count = 0
#     for index, symbol in enumerate(str): # enumerate позволяет перебирать элементы коллекции (например, списка) и возвращать пары значений: индекс элемента и сам элемент.
#         if symbol == '0':
#             count += 1
#     if count == 3:
#         pos = index
#     return pos
#
# str_list = ["abcj0ajf0ajb0",
#             "jddi0wejfn00",
#             "000aknfakfn",
#             "aknfa000ajfnajfn"]
#
# for str in str_list:
#     pos = position_3_zero(str)
#     print(pos)

# Даны числа, разделенные запятыми. Найдите сумму этих чисел.
# l = '12,34,56'
# l1 = sum(map(int, l.split(','))) # split делит строку на подстроку до запятой, эти подстроки переводим в инт чтобы суммировать.
# print(l1)

# Преобразуйте эту дату в следующий словарь:
# data = '2025-12-31'
# key = ('year' ,'mont','day')
# dct = dict(zip(key, data.split('-'))) # zip объединяет символы в строке/кортеже и т.д. в пары. dict создает словарь.
# print(dct)

# Дана некоторая строка с буквами и цифрами. Получите позицию первой цифры в этой строке.
# l= 'fd1254fg'
# l2=l.index('f')
# print(l2)

# Дано число. Выведите в консоль количество четных цифр в этом числе.
# l=1352
# l1=list(str(l))
# s = sum(1 for x in l1 if int(x) % 2 ==0)
# print(s)



# n = int(input('Введите длину: '))
# s = []
# i=0
# while i<n:
#     string = 'Введите значение #' + str(i+1) + ':'
#     s.append(input(string))
#     i+=1
# print(s)

# s='aaa bbb ccc'
# print(s.title()) # title делает заглавными первую букву слова

# Преобразуйте эту дату в следующий кортеж
# d = '2025-12-31'
# print(tuple(reversed(d.split('-'))))


#Получите сет позиций всех нулей в этой в строке.
# st = '03m0df0dfg0'
# c=[]
# for index, symbol in enumerate(st):
#     if symbol == '0':
#         c.append(index)
# print(set(c))


#Удалите из этой строки каждый третий символ.
# l = 'abcdefg'
# s=list(l)
# del s[2::3]
# print(s)

#Поделите сумму элементов, стоящих на четных позициях, на сумму элементов, стоящих на нечетных позициях.
# l = [1, 2, 3, 4, 5, 6]
# s=0
# s1=0
# for i in l:
#     if i%2==0:
#         s+=i
#     if i%3==0:
#         s1+=i
#         res=s/s1
# print(res)


